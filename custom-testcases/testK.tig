/*
if 4<5 then 10 else 11
*/

/*
while(1=1) do 
if 1 <= 1 then break else break
*/

/*
let var a := 1
var b := 2
var c := 3
in
a+b+c
end
*/

/*
let 
	function test(a:int, b:int, c:int, d:int):int = 10
in 
	test(1,2,3,4)
end
*/

/*
let function test1():int =
	let
		function test2(a:int, b:int, c:int, d:int):int = 10
	in
	test2(1,2,3,4)
	end
in 
	test1()
end
*/

/*
let var a := 1
	var b := 2
	var c := 3
	var d := 10
	var e := 4
	var f := 5
	var g := 6
	var h := 7
	var i := 8
	var j := 9

	function blah():int = 3

in
a+b+ blah()
end
*/

/*
let function a():int = 10
	function b():int = 20
in
a() + b()
end
*/

/*
let function fact(n:int):int = if n = 1 then 1 else n * fact(n-1)
in
fact(13)
end
*/


/*
let var a := 1
	var b := 2
	var c := 3
	var d := 10
	var e := 4
	var f := 5
	var g := 6
	var h := 7
	var i := 8
	var j := 9
	var k := 9
	var l := 9
	var m := 9
	var n := 9
	var o := 9
	var p := 9
	var q := 9
	var r := 9
	var s := 9
	var t := 9
	var u := 9
	var v := 9
	var w := 9
	var x := 9
	var y := 9
	var z := 9

	function blah():int = 1

in
a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s
end
*/


/*
let var a := 3
	function f():int = 
		let function g():int = a
		in g() end
in 
	f()+5
end
*/

/*
let var ret := 1
in
	for a:= 1 to 10 do (ret := ret*a);
	ret
end
*/

/*
let function fact(n:int):int = if n = 1 then 1 else n * fact(n-1)
	var sum := 0
in
for a:= 1 to 10 do (sum := sum+fact(a));
sum
end
*/

/*
let var a := 5
	function f(b:int, c:int, d:int, e:int, f:int, g:int):int = 
		let function fact(n:int):int = if n = 1 then 1 else n * fact(n-1)
		in
			fact(a) + fact(b) + fact(g)
		end
in 
	f(1,2,3,4,5,6)
end
*/

/*
let var a := 1
	var b := 2
	var c := 3
	var d := 10
	var e := 4
	var f := 5
	var g := 6
	var h := 7
	var i := 8
	var j := 9
	var k := 9
	var l := 9
	var m := 9
	var n := 9
	var o := 9
	var p := 9
	var q := 9
	var r := 9
	var s := 9
	var t := 9
	var u := 9
	var v := 9
	var w := 9
	var x := 9
	var y := 9
	var z := 9

	function blah():int = 1

in
a+b+c+d+e+f+g+h+i+j+k+l+m+n+o;
blah();
p+q+r+s+t+u+v+w
end
*/

/*
let function fib(a:int):int=
	if a = 1 | a = 2 then 1
	else fib(a-1) + fib(a-2)



	function fib2(num:int):int = 
	let var a:= 0
		var b := 1
		var fib := 0
		function innerfib():int = if num = 1 then 1
								else (for c:= 1 to num-1 do (fib := a+b; a:=a+b; b:=a-b; a:=a-b; b:=a+b);
			 					fib)
	in
		innerfib()
	end

	function compare(n:int):int =
		if n = 1 then fib(n) = fib2(n)
		else

		(fib(n) = fib2(n)) & compare(n-1)

in

compare(20)

end
*/

/*
let 
	var zero := 0
	function getZero():int = zero

	function h(a:int):int = 
		let 
			var one := 1
			function getOne():int = one

			function f(x:int):int = 
				let	function g(y:int):int = if x = zero then getZero() else h(y)
				in
					x + g(a - getOne())
				end
		in
			f(a)
		end
in

h(11)

end
*/

/*
let function printint(i: int) =
  let function f(i:int) = if i>0 
	     then (f(i/10); print(chr(i-i/10*10+ord("0"))))
   in if i<0 then (print("-"); f(-i))
      else if i>0 then f(i)
      else print("0")
  end

in
printint(  "abc" = "ab"  )
end
*/



let type rec = {a:int, b:string}
	var thing := rec{a=1, b="asd"}


	function printint(i: int) =
  let function f(i:int) = if i>0 
	     then (f(i/10); print(chr(i-i/10*10+ord("0"))))
   in if i<0 then (print("-"); f(-i))
      else if i>0 then f(i)
      else print("0")
  end
in

printint(thing.a);
print(thing.b)

end



