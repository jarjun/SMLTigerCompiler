
let 
	var m := 9
	function kappa(a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int, i:int):int = 
		let function pogchamp(j:int):int = a + b
		in
			a + b + c + d + e + f + g + h + i
		end
	/* function elegiggle(f:string):int = 0 */
in end


/* if 7=4 then 3=5 else 1+3 */

/*
let var a := 3
	var b := 7
	var q := 5
	function keepo():int = 
		let function inner():int = 
			let function innerinner(): int = a
			in 
			0 
			end

	in 
	q  + a
	end
in
	q + b
end
*/

/*
let var b := 3
	type arr = array of int
	type arr2 = array of arr
	var d := 4
	var a := arr2[10+5] of arr[10*d] of b
	function bingo():int = b

in a[1][b] end
*/

/*
let type arr = array of int
	var a := arr[10*5] of 5

in a[-1] end
*/

/*
let type rec = {a:int, b:simple}
	type simple = {n:int}

	var a := rec{a=5, b= simple{n=10} }
in a.b.n
end
*/

/*
let type rec = {a:int, b:int, c:int}
	var a := rec{a=5, b= 9, c=13 }
	function test():rec = a
in
	a.c := 7
end
*/

/*
let var a := 1
	/* function abc():int = 9 */
in 
while a<10 do 
	while 1+1 do break
end
*/

/*
for i := 5 to 10 do break
*/

/*
let var a:int := 7
in 
(1; 1;1;1;1;1;a) + (1; 1-2) + 2
end
*/

/*
let var x := 3
	function westicle():int = x	
in
	(1; (2;"a";x)) + (("b"; "c"; "a"; "a"; "abc"); 7)
end
*/

/*
let
	function str():string = "abc"
	var a := "abc"
in
	a = str()
end
*/

/*
let
	var b := 3
	function str(a:int):int = 
		let function f():int = 
			let var q := 098
				function g():int = (q ; g())
			in
				g()
			end
		in 1232 end
in
	b;
	str(9)
end
*/

/*
let type arr = array of int
	var a:= arr[let function str():int = 3
		in
			3
		end] of 3
in
	a[
	 	let function str():int = 3
		in
			3
		end
	  ]
end
*/

/*
let var a:= "hello"
	function str(b:int):int = 
		let function f(c:string):int = (sib();print(a); 7)
		in
			print(a);
			5
		end
	function sib() = ()
	var formattedMultiLineString := "abc\


	\t\
 


\de\
\fg\
\hijk"
in
	print(a)
end
*/

/*
let type rec = {a:int}
	var b:= rec{a=5}
	var c:= rec{a=5}
in
b=c
end
*/

