let 
	function a() = int [6*t] of "str"

	/*function b() = 4

	type c = int
	type d = c

	var a := 5

	function newFn(q:int, w:int, e:int):int = 4

	type rec = {a:int, s:int} */

in
	/* 1 - (2*3) = (-4 | 6);
	123+4 */

	/* a.first := 3;
	b[4+5] := 6;
	c := "herro";
	();
	
	if 1 then 3+4 else "pls";
	if KappaPride.forsen then PogChamp[temponoodle.reynoodle]*/

	/* while 1 do 3+4;
	for x:=0 to 5 do if y<>3 then y+1 else if y+1 <> 3 then y+2 else break */

	/*fn(1,3,"str",x);
	b()*/

	/*(1;2;3;4);
	(5;6;7;8)*/

	/*a := tree {head=cur, left=nil, right=nil};
	b := node {}*/

	x := int [2] of tree [4] of 0

end
